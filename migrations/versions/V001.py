
from alembic import op
import sqlalchemy as sa
import geoalchemy2


# # revision identifiers, used by Alembic.
revision = '92d18f8367d2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('route',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('path', geoalchemy2.types.Geometry(geometry_type='LINESTRING'), nullable=False),
    sa.Column('created_ts', sa.DateTime(), nullable=False),
    sa.Column('modified_ts', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('docking_station',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('geo', geoalchemy2.types.Geometry(geometry_type='POINT'), nullable=False),
    sa.Column('created_ts', sa.DateTime(), nullable=False),
    sa.Column('modified_ts', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('robot',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('route_id', sa.Integer(), nullable=True),
    sa.Column('docking_station_id', sa.Integer(), nullable=True),
    sa.Column('created_ts', sa.DateTime(), nullable=False),
    sa.Column('modified_ts', sa.DateTime(), nullable=True),
    sa.CheckConstraint('NOT(docking_station_id IS NOT NULL AND route_id IS NOT NULL)'),
    sa.CheckConstraint('NOT(docking_station_id IS NULL AND route_id IS NULL)'),
    sa.ForeignKeyConstraint(['route_id'], ['route.id'], ),
    sa.ForeignKeyConstraint(['docking_station_id'], ['docking_station.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('robot_route',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('route_id', sa.Integer(), nullable=False),
    sa.Column('robot_id', sa.Integer(), nullable=False),
    sa.Column('start_ts', sa.DateTime(), nullable=False),
    sa.Column('end_ts', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['robot_id'], ['robot.id'], ),
    sa.ForeignKeyConstraint(['route_id'], ['route.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.add_column('route', sa.Column('points', sa.Text(), nullable=False))
    op.drop_index('idx_route_path', table_name='route')
    op.alter_column('docking_station', 'geo',
               existing_type=geoalchemy2.types.Geometry(geometry_type='POINT'),
               nullable=True)
    op.drop_index('idx_docking_station_geo', table_name='docking_station')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('spatial_ref_sys',
    sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    sa.CheckConstraint('(srid > 0) AND (srid <= 998999)', name='spatial_ref_sys_srid_check'),
    sa.PrimaryKeyConstraint('srid', name='spatial_ref_sys_pkey')
    )
    op.drop_table('robot_route')
    op.drop_table('robot')
    op.drop_table('docking_station')
    op.drop_table('route')
    # ### end Alembic commands ###
